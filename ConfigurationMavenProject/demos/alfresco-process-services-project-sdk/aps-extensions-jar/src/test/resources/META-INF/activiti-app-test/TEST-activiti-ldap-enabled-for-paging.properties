
# --------------------------
# LDAP AUTHENTICATION CONFIG
# --------------------------

# Note that this is AUTHENTICATION only, not synchronization.
# For this to work properly, the LDAP synchronization (see below), needs to be 
# enabled and configured correctly, too.

ldap.authentication.enabled=true
ldap.authentication.dnPattern= uid={0},ou=users,dc=alfresco,dc=com

# ----------------------------
# LDAP SYNCHRONIZATION CONFIG
# ----------------------------

# Sync is disabled IN TEST. Because we want to manually test the syncing
ldap.synchronization.full.enabled=true 
ldap.synchronization.full.cronExpression=0 0 0 * * ?

# Enabled partial synchronization. This will only check the users/groups which are changes since last sync.
# A partial sync cannot detect deletes of users/groups. This is done by the full sync.
ldap.synchronization.partial.enabled=false
ldap.synchronization.partial.cronExpression=0 0 */4 * * ?

# Paging (default = no paging).
# If enabled, default page size is 100
ldap.synchronization.paging.enabled=true
ldap.synchronization.paging.size=100

# Db batch sizes
ldap.synchronization.db.insert.batch.size=25
ldap.synchronization.db.query.batch.size=100


# ----------------------
# LDAP CONNECTION CONFIG
# ----------------------

# The URL to connect to the LDAP server 
ldap.authentication.java.naming.provider.url=ldap://localhost:10590

# The default principal to use (only used for LDAP sync)
ldap.synchronization.java.naming.security.principal=uid=admin,ou=system

# The password for the default principal (only used for LDAP sync)
ldap.synchronization.java.naming.security.credentials=secret

# The authentication mechanism to use for synchronization
#ldap.synchronization.java.naming.security.authentication=simple

# LDAPS truststore configuration properties
#ldap.authentication.truststore.path=
#ldap.authentication.truststore.passphrase=
#ldap.authentication.truststore.type=
# Set to 'ssl' to enable truststore configuration via subsystem's properties
#ldap.authentication.java.naming.security.protocol=ssl

# The LDAP context factory to use
#ldap.authentication.java.naming.factory.initial=com.sun.jndi.ldap.LdapCtxFactory

# Requests timeout, in miliseconds, use 0 for none (default)
#ldap.authentication.java.naming.read.timeout=0

# See http://docs.oracle.com/javase/jndi/tutorial/ldap/referral/jndi.html
#ldap.synchronization.java.naming.referral=follow



# -----------
# USER CONFIG
# -----------

# The user search base restricts the LDAP user query to a sub section of tree on the LDAP server.
ldap.synchronization.userSearchBase=ou=users,dc=alfresco,dc=com

# The query to select all objects that represent the users to import.
ldap.synchronization.personQuery=(objectclass\=inetOrgPerson)

# The query to select objects that represent the users to import that have changed since a certain time.
ldap.synchronization.personDifferentialQuery=(&(objectclass\=inetOrgPerson)(!(modifyTimestamp<\={0})))

# The attribute name on people objects found in LDAP to use as the uid in Alfresco
ldap.synchronization.userIdAttributeName=uid

## The attribute on person objects in LDAP to map to the first name property of a user
ldap.synchronization.userFirstNameAttributeName=givenName

# The attribute on person objects in LDAP to map to the last name property of a user
ldap.synchronization.userLastNameAttributeName=sn

# The attribute on person objects in LDAP to map to the email property of a user
ldap.synchronization.userEmailAttributeName=mail

ldap.synchronization.userType=inetOrgPerson

# Set the dn of the people that need to be made tenant admin (one tenant). Delimit multiple entries with ;, cause we can't use a comma of course. Note: no trimming of spaces will be applied
ldap.synchronization.tenantAdminDn=uid=joram,ou=users,dc=alfresco,dc=com;uid=tijs,ou=users,dc=alfresco,dc=com

# Set the dn of the people that need to be made tenant manager (multiple tenants). Delimit multiple entries with ;, cause we can't use a comma of course. Note: no trimming of spaces will be applied
ldap.synchronization.tenantManagerDn=uid=joram,ou=users,dc=alfresco,dc=com

# ------------
# GROUP CONFIG
# ------------

# The group search base restricts the LDAP group query to a sub section of tree on the LDAP server.
ldap.synchronization.groupSearchBase=ou=groups,dc=alfresco,dc=com

# The query to select all objects that represent the groups to import.
ldap.synchronization.groupQuery=(objectclass\=groupOfNames)

# The query to select objects that represent the groups to import that have changed since a certain time.
ldap.synchronization.groupDifferentialQuery=(&(objectclass\=groupOfNames)(!(modifyTimestamp<\={0})))

# The attribute on LDAP group objects to map to the authority name property in Alfresco
ldap.synchronization.groupIdAttributeName=cn

# The attribute in LDAP on group objects that defines the DN for its members
ldap.synchronization.groupMemberAttributeName=member

ldap.synchronization.groupMemberRangeEnabled=true
ldap.synchronization.groupMemberRangeSize=200

ldap.synchronization.groupType=groupOfNames



# ------------------------
# GENERIC ATTRIBUTE CONFIG
# ------------------------

# The dn of an entry. 
ldap.synchronization.distinguishedNameAttributeName=dn

# The name of the operational attribute recording the last update time for a group or user.
ldap.synchronization.modifyTimestampAttributeName=modifyTimestamp

# The name of the operational attribute recording the create time for a group or user.
ldap.synchronization.createTimestampAttributeName=createTimestamp

# The timestamp format. Unfortunately, this varies between directory servers.
ldap.synchronization.timestampFormat=yyyyMMddHHmmss'Z'

# The timestamp format locale language. 'en' by default. Follows the java.util.Locale semantics.
ldap.synchronization.timestampFormat.locale.language=en

# The timestamp format locale country. 'GB' by default. Follows the java.util.Locale semantics.
ldap.synchronization.timestampFormat.locale.country=GB

# The timestamp format timezone. 'GMT' by default. Folloez the java.text.SimpleDateFormat semantics.
ldap.synchronization.timestampFormat.timezone=GMT


# -----------------------
# LDAP CONNECTION POOLING
# -----------------------

# Options=
# nothing filled in: no connection pooling
# 'jdk': use the default jdk pooling mechanism
# 'spring': use the spring ldap connection pooling facilities. These can be configured further below
#ldap.synchronization.pooling.type=spring

# Following settings follow the semantics of org.springframework.ldap.pool.factory.PoolingContextSource
#ldap.synchronization.pooling.minIdle=0
#ldap.synchronization.pooling.maxIdle=8
#ldap.synchronization.pooling.maxActive=0
#ldap.synchronization.pooling.maxTotal=-1
#ldap.synchronization.pooling.maxWait=-1
# Options for exhausted action: fail | block | grow
#ldap.synchronization.pooling.whenExhaustedAction=block
#ldap.synchronization.pooling.testOnBorrow=false
#ldap.synchronization.pooling.testOnReturn=false
#ldap.synchronization.pooling.testWhileIdle=false
#ldap.synchronization.pooling.timeBetweenEvictionRunsMillis=-1
#ldap.synchronization.pooling.minEvictableIdleTimeMillis=1800000
#ldap.synchronization.pooling.numTestsPerEvictionRun=3

# Connection pool validation (see http://docs.spring.io/spring-ldap/docs/2.0.2.RELEASE/reference/#pooling for semantics)
# Used when any of the testXXX above are set to true
#ldap.synchronization.pooling.validation.base=
#ldap.synchronization.pooling.validation.filter=
# Search control: object, oneLevel, subTree
#ldap.synchronization.pooling.validation.searchControlsRefs=


