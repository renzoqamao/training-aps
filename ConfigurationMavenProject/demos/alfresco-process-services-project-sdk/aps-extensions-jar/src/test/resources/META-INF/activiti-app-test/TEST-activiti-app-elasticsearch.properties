server.onpremise=true
server.contextroot=/rest

#
# SECURITY
#

# security configuration, used for authentication (this key should be unique for your application, and kept secret)
security.rememberme.key=testActivitiSuperUb3r3cr3tk3y

# Passwords for non-OAuth services (eg. on-premise alfresco) are encrypted using AES/CBC/PKCS5PADDING
# It needs a 128-bit initialization vector (http://en.wikipedia.org/wiki/Initialization_vector) and a 128-bit secret key
# represented as 16 ascii characters below
security.useraccount.credentialsIVSpec=j8kdO2hejA9lKmm6
security.useraccount.credentialsSecretSpec=9FGl73ngxcOoJvmL


# ##################
# ES General settings
# ##################
elastic-search.cluster.name=TEST-activiti-elastic-search-cluster

# Must be a unique name in the elastic search cluster
elastic-search.node.name=activiti

elastic-search.default.index.name=activiti
elastic-search.tenant.index.prefix=activiti_tenant_

# Enable/disable the REST API of the embedded ES node
elastic-search.enable.http=true
elastic-search.enable.http.cors=true

# ES discovery settings using multicast
#elastic-search.discovery.type=multicast
#elastic-search.discovery.multicast.group=224.2.2.4
#elastic-search.discovery.multicast.port=54328
#elastic-search.discovery.multicast.ttl=3
#elastic-search.discovery.multicast.address=

# ES disovery settings using unicast 
elastic-search.discovery.type=unicast
elastic-search.discovery.hosts=127.0.0.1[9300-9400]


# ################
# Embedded config 
# ################

elastic-search.server.type=embedded
elastic-search.data.path=$user_home$/TEST-activiti-elastic-search-data

# #################################
# Client setup (example)
# #################################

#elastic-search.server.type=client

#
# EVENT PROCESSING TWEAKING
# (DB -> Elastic Search)
#

# Set to false if no Activiti events need to be generated.
# Do note that the reporting/analytics data is then lost forever.
event.generation.enabled=true

# Set to false to not to event processing. This could be useful 
# in a clustered setup where only sone nodes do the processing
event.processing.enabled=true

# The amount of events that are tried to be locked and processed in one go
event.processing.blocksize=100000

# The cron expression that defines how often the events generated by the Activiti process engine are
# processed (= read from the database and fed into Elastic Search). By default every 5 seconds(0/5 * * * * ?). (changed temporarily to every 10 hours inorder to stop running schedulers)
event.processing.cronExpression=0 0 0/10 * * ?

# The cron expression that defines how often 'expired' events are processed. These are events
# that were locked, but never processed (maybe the node processing them went down).
# By default every 30 minutes(0 0/30 * * * ?). (changed temporarily to every 10 hours inorder to stop running schedulers)
event.processing.expired.cronExpression=0 0 0/10 * * ?

# The maximum time an event is considered 'locked'. After that it can be taken by another processing thread
#event.processing.max.locktime=600000

# Possible options:
# - 'move': the processed events are moved to another db table to keep the event log table small and snappy
# - 'delete': the processed events are deleted
# 
# Comment this line out to do nothing: events are kept in the original table as-is
event.processing.processed.events.action=move

# The cron expression that defines how often the action defined above happens
# By default every 20 minutes(0 25/45 * * * ?). (changed temporarily to every 10 hours inorder to stop running schedulers)
event.processing.processed.action.cronExpression=0 0 0/10 * * ?



contentstorage.fs.rootFolder=target/data/
contentstorage.fs.createRoot=true



# CORS
cors.enabled=false
cors.allowed.origins=*
cors.allowed.methods=GET,POST,HEAD,OPTIONS,PUT,DELETE
cors.allowed.headers=Authorization,Content-Type,Cache-Control,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,X-CSRF-Token
cors.exposed.headers=Access-Control-Allow-Origin,Access-Control-Allow-Credentials
cors.support.credentials=true
cors.preflight.maxage=10
